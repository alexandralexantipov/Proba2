import os  # Импортируем модуль os для работы с операционной системой (папками, файлами и путями)
from tkinter import *  # Импортируем все функции из библиотеки tkinter для создания графического интерфейса программы
from tkinter import filedialog as fd  # Импортируем модуль filedialog для выбора папок и переименовываем его в fd


def move_doc_files():  # Объявляем функцию с именем move_doc_files для перемещения файлов
    root = Tk()  # Создаем главное окно программы
    root.withdraw()  # Скрываем главное окно методом withdraw() чтобы показать только диалог выбора папки

    source_folder = fd.askdirectory(title="Выберите папку с файлами .doc и .docx")  # Выбираем папку через диалоговое окно. Метод askdirectory() показывает диалог выбора папки с заданным заголовком

    if not source_folder:  # Условие if проверяем, не отменил ли пользователь выбор папки (пустая строка означает отмену)
        print("Операция отменена пользователем.")  # Если отменил, выводим сообщение в консоль методом print()
        return  # Ключевое слово return выходим из функции досрочно (как в div_calc.py)

    new_folder = source_folder + '_new'  # Создаем новую папку с суффиксом _new. Оператором + конкатенации добавляем к имени исходной папки суффикс "_new" для создания имени новой папки

    if not os.path.exists(new_folder):  # Создаем папку если ее нет. Метод os.path.exists() проверяет существует ли уже такая папка (возвращает True или False)
        os.mkdir(new_folder)  # Метод os.mkdir() создает новую папку
        print(f"Создана новая папка: {new_folder}")  # f-строкой выводим сообщение о создании папки

    all_files = os.listdir(source_folder)  # Метод os.listdir() получает список всех файлов и папок в указанной папке

    moved_count = 0  # Создаем счетчик для подсчета перемещенных файлов, инициализируем нулем
    for file in all_files:  # Цикл for перебираем каждый файл в списке файлов
        if file.lower().endswith(('.doc', '.docx')):  # Условие if проверяем расширение файла: метод lower() приводит к нижнему регистру, endswith() проверяет окончание строки
            source_path = os.path.join(source_folder, file)  # Метод os.path.join() создает полный путь к исходному файлу
            destination_path = os.path.join(new_folder, file)  # Метод os.path.join() создает полный путь для нового файла в целевой папке

            try:  # Блок try начинаем для обработки возможных ошибок при работе с файлами
                with open(source_path, 'rb') as f_source:  # Читаем исходный файл в бинарном режиме. Конструкция with open открывает файл в бинарном режиме чтения ('rb') для безопасной работы
                    content = f_source.read()  # Метод read() читает все содержимое файла в переменную content (как readlines() но для бинарных данных)
                with open(destination_path, 'wb') as f_dest:  # Записываем в новый файл в бинарном режиме. Конструкция with open открывает/создает файл в бинарном режиме записи ('wb')
                    f_dest.write(content)  # Метод write() записывает содержимое в новый файл
                os.remove(source_path)  # Метод os.remove() удаляет оригинальный файл после успешного копирования из исходной папки (завершаем перемещение)

                print(f"Перемещен: {file}")  # f-строкой выводим сообщение об успешном перемещении конкретного файла
                moved_count += 1  # Оператором += увеличиваем счетчик перемещенных файлов на 1

            except Exception as e:  # Блок except перехватываем любые исключения (ошибки) при работе с файлами
                print(f"Ошибка при перемещении файла {file}: {e}")  # f-строкой выводим сообщение об ошибке с информацией о файле и типе ошибки

    print(f"\nОперация завершена успешно!")  # Выводим итоговый результат операции в консоль. Сообщение о завершении операции (перенос строки \n)
    print(f"Перемещено файлов .doc/.docx: {moved_count}")  # Показываем общее количество перемещенных файлов
    print(f"Исходная папка: {source_folder}")  # Показываем путь к исходной папке для информации
    print(f"Новая папка: {new_folder}")  # Показываем путь к новой папке где теперь находятся файлы

move_doc_files()  # Вызываем функцию move_doc_files() чтобы программа начала работать при запуске файла (Запускаем программу напрямую)
